/*
* gradle 파일 task 정리
* gradle 의 태스크를 알고 쓰기 위한 주석입니다.
* 알아두면 좋은 부분은 * 표기해 두었습니다.
*
* 기본 내장 task 목록
* - init : gradle 프로젝트 초기화
* - wrapper : gradlew(간편 빌드) 파일 생성
* - tasks : 현재 프로젝트에 등록된 task 목록 출력. 예시 ) gradle tasks
*
* plugin 'java' 에서 제공되는 task 목록
* - * assemble : 테스트를 생략하고 결과 (jar/war) 만 생성
* - * build : check 태스크와 assemble 태스크를 실행
* - buildDependents : 의존 프로젝트도 함께 빌드
* - buildNeeded : buildDependents 와 차이를 모르겠음
* - classes : compileJava, processResources  태스크를 실행
* - * clean : 빌드 출력 결과 삭제. 파라미터로 태스크를 넣어서 해당 태스크 결과만 삭제 가능. 예시 ) gradle clean test
* - jar : compileJava, processResources 태스크를 돌려서 결과 생성
* - testClasses : classes 의 test 버전 (compileTestJava, processTestResources)
* - javadoc : 프로덕션 코드의 javadoc 실행
* - * compileJava : 프로덕션 코드 컴파일
* - * processResources : 프로덕션 코드 리소스를 클래스패스에 복사
*
* */

buildscript {
    ext {
        springBootVersion = '1.5.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war' // apply plugin: 'java' :: war 플러그인이 java 플러그인의 모든 부분을 포함함

jar {
    baseName = 'ice2-core'
    manifest {
        attributes('Main-Class': 'net.ion.ice.Ice2Application')
    }
}

version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {

//	mavenCentral()
    maven {
        url 'http://dcsf-dev01.i-on.net/nexus/content/groups/public/'
        name 'sdp.i-on.net'
    }

}

/*
* 키워드
* providedCompile : 컴파일 시에는 참조하고 war 안에는 포함이 되지 않음
*
* 방식
* - groovy 문법 상 () 를 생략할 수 있음
* - compile ("group:name:version") - OK
* - compile "group:value:version" - OK
* */
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-tomcat:1.5.4.RELEASE')

    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-configuration-processor')
    compile('org.apache.commons:commons-lang3:3.5+')
    compile('commons-net:commons-net:3.4+')
    compile('commons-io:commons-io:2.5+')
    compile('com.fasterxml.jackson.core:jackson-databind:2.8.6+')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.6+')

	compile('com.hazelcast:hazelcast-all:3.8.3')

    // yml parser
    compile ('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.9')

    compile('ch.qos.logback:logback-access:1.2.3')
    compile('net.logstash.logback:logstash-logback-encoder:4.8+')
    compile('org.infinispan:infinispan-embedded:8.2.6.Final')
    compile('org.infinispan:infinispan-query:8.2.6.Final')
    compile('io.jsonwebtoken:jjwt:0.7.0')

    compile("org.springframework:spring-jdbc")
    compile("org.apache.commons:commons-dbcp2:2.1.1")
    compile('com.oracle:ojdbc8:12.2.0.1')                       //oracle
    compile('mysql:mysql-connector-java:5.1.42')                //mysql
    compile('org.mariadb.jdbc:mariadb-java-client:2.0.2')       //maria
    compile('com.microsoft.sqlserver:mssql-jdbc:6.1.0.jre8')    //msSql

    compile('org.stagemonitor:stagemonitor-web-servlet:0.80.0.RC1')
    compile('org.projectlombok:lombok:1.16.16')
    runtime('org.springframework.boot:spring-boot-devtools')
    testCompile('org.springframework.boot:spring-boot-starter-test')

}
