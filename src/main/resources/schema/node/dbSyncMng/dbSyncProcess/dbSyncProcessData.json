[
  {
    "typeId": "dbSyncProcess"
    , "executeId": "test0001"
    , "targetDs": "cjDb"
    , "targetNodeType": "dbTest01"
    , "query": "SELECT now() as current FROM DUAL"
    , "onFail": "skip"
  }

  , {
    "typeId": "dbSyncProcess"
    , "executeId": "test0002"
    , "targetDs": "cjDb"
    , "targetNodeType": "dbTest02"
    , "query": "SELECT langId, count(*) as cnt FROM langMng GROUP By langId"
    , "onFail": "stop"
  }

  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migAlbum"
    , "targetDs": "cjMig"
    , "targetNodeType": "album"
    , "query": "SELECT ALBUM_ID as albumId, ALBUM_NM as albumNm, ARTIST_IDS as artistId, RELEASE_YMD as comotDt, RELEASE_COUNTRY_CD as comotCntry, ALBUM_TYPE_CD as typeCd, STUFF((SELECT ',' + GENRE_CD FROM MT_ALBUM_GENRE WHERE ALBUM_ID = ALBUM.ALBUM_ID FOR XML PATH('')),1,1,'') AS genreCd, DISTRIBUTE_COMPANY_NM as dstrbCrcrt, ALBUM_SUBNM as subName, SERIES_TAG as sersName, ALBUM_INTRO as albumDesc, (SELECT GROUP_CONCAT(KEYWORD) FROM MT_ALBUM_KEYWORD WHERE ALBUM_ID = ALBUM.ALBUM_ID) as findKywrd, (SELECT GROUP_CONCAT(country_cd) FROM mt_album_country WHERE ALBUM_ID = ALBUM.ALBUM_ID) as showCntryCdList, (SELECT GROUP_CONCAT(ARTIST_ID) FROM MT_ALBUM_ARTIST WHERE ALBUM_ID = ALBUM.ALBUM_ID) as relArtistIds, (SELECT GROUP_CONCAT(SONG_ID) FROM MT_ALBUM_SONGS WHERE ALBUM_ID = ALBUM.ALBUM_ID) as relSongIds, 'Y' as mnetIfTrtYn, CREATE_DT as created, UPDATE_DT as changed FROM MT_ALBUM ALBUM LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }

, {
    "typeId": "dbSyncProcess"
    , "executeId": "migAlbumMulti"
    , "targetDs": "cjMig"
    , "targetNodeType": "albumMulti"
    , "query": "SELECT album_id as albumId , lang_cd as langCd , album_nm as albumNm , album_subnm as subName , series_tag as sersName , album_intro as albumDesc , (SELECT GROUP_CONCAT(keyword) FROM mt_album_meta WHERE album_id = ALBUM_META.album_id AND langCd = ALBUM_META.langCd) as findKywrd FROM mt_album_meta ALBUM_META LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }

  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migArtist"
    , "targetDs": "cjMig"
    , "targetNodeType": "artist"
    , "query": "SELECT ARTIST_ID as artistId , ARTIST_NM as artistNm , ARTIST_BIRTH_YMD as cretDt , ARTIST_NATIONALITY as bpnac , ARTIST_GENDER as sex , ARTIST_TYPE_CD as typeCd , (SELECT GROUP_CONCAT(GENRE_CD) FROM MT_ARTIST_GENRE WHERE ARTIST_ID = ARTIST.ARTIST_ID) as genreCd , DEBUT_YMD as debutDt , DEBUT_ALBUM_ID as debutAlbum , ARTIST_INTRO as artistDesc , ARTIST_NM as atvyName , (SELECT GROUP_CONCAT(KEYWORD) FROM MT_ARTIST_KEYWORD WHERE ARTIST_ID = ARTIST.ARTIST_ID) as findKywrd , (SELECT GROUP_CONCAT(country_cd) FROM mt_artist_country WHERE ARTIST_ID = ARTIST.ARTIST_ID) as showCntryCdList , DISPLAY_FLG as showYn , 'Y' as mnetIfTrtYn , CREATE_DT as created , UPDATE_DT as changed FROM MT_ARTIST ARTIST LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }


  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migArtistMulti"
    , "targetDs": "cjMig"
    , "targetNodeType": "artistMulti"
    , "query": "SELECT artist_id as artistId , langCd as lang_cd , artist_nm as artistNm , artist_intro as artistDesc , artist_prev_active_nm as atvyName , (SELECT GROUP_CONCAT(keyword) FROM mt_artist_keyword_meta WHERE artist_id = ARTIST_META.artist_id AND lang_cd = ARTIST_META.lang_cd) as findKywrd FROM mt_artist_meta ARTIST_META LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }


  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migSong"
    , "targetDs": "cjMig"
    , "targetNodeType": "song"
    , "query": "SELECT SONG_ID as songId , SONG_NM as songNm , SONG_SHORT_INFO as subName , SONG_MEDIA_INFO as songDesc , ARTIST_IDS as artistId , ALBUM_ID as albumId , RUNNING_TIME as playTime , (SELECT LYRIC FROM MT_SONG_LYRIC WHERE SONG_ID = SONG.SONG_ID) as wrds , (SELECT GROUP_CONCAT(KEYWORD) FROM MT_SONG_KEYWORD WHERE SONG_ID = SONG.SONG_ID) as findKywrd , (SELECT GROUP_CONCAT(country_cd) FROM mt_song_country WHERE song_id = SONG.SONG_ID) as showCntryCdList , (SELECT GROUP_CONCAT(ALBUM_ID) FROM MT_ALBUM_SONGS WHERE SONG_ID = SONG.SONG_ID) as refAlbumIds , (SELECT GROUP_CONCAT(ARTIST_ID) FROM MT_SONG_ARTIST WHERE SONG_ID = SONG.SONG_ID) as refArtistIds , 'Y' as mnetIfTrtYn , CREATE_DT as created, UPDATE_DT as changed FROM MT_SONG SONG LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }


  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migSongMulti"
    , "targetDs": "cjMig"
    , "targetNodeType": "songMulti"
    , "query": "SELECT song_id as songId , lang_cd as langCd , song_nm as songNm , song_short_info as subName , song_media_info as songDesc , (SELECT GROUP_CONCAT(keyword) FROM mt_song_keyword_meta WHERE song_id = MSM.song_id) as findKywrd FROM mt_song_meta MSM LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }


  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migMusicVideo"
    , "targetDs": "cjMig"
    , "targetNodeType": "musicVideo"
    , "query": "SELECT MV_ID as musicVideoId , MV_TITLE as musicVideoNm , MV_SUBTITLE as subName , GENRE_CD as genreCd , MV_INTRO as musicVideoDesc , (SELECT GROUP_CONCAT(KEYWORD) FROM MT_MV_KEYWORD WHERE MV_ID = MV.MV_ID) as findKywrd , RELEASE_YMD as comotDt , ARTIST_IDS as artistId , (SELECT YOUTUBE_URL FROM MT_MV_EMBED WHERE MV_ID = MV.MV_ID) as youtubeUrl , (SELECT TUDOU_URL FROM MT_MV_EMBED WHERE MV_ID = MV.MV_ID) as todouUrl , RUNNING_TIME as playTime , (SELECT GROUP_CONCAT(country_cd) FROM mt_mv_country WHERE mv_id = MV.MV_ID) showCntryCdList , 'Y' as mnetIfTrtYn , DISPLAY_FLAG as showYn , SONG_ID as relSongIds , (SELECT GROUP_CONCAT(ARTIST_ID) FROM MT_MV_ARTIST WHERE MV_ID = MV.MV_ID) relArtistIds , CREATE_DT as created , UPDATE_DT as changed FROM MT_MV MV LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }



  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migMusicVideoMulti"
    , "targetDs": "cjMig"
    , "targetNodeType": "musicVideoMulti"
    , "query": "SELECT mv_id as musicVideoId , lang_cd as langCd , mv_title as musicVideoNm , mv_subtitle as subName , mv_intro as musicVideoDesc , (SELECT YOUTUBE_URL FROM MT_MV_EMBED WHERE MV_ID = MMM.mv_id) as youtubeUrl , (SELECT TUDOU_URL FROM MT_MV_EMBED WHERE MV_ID = MMM.mv_id) as todouUrl , (SELECT GROUP_CONCAT(KEYWORD) FROM mt_mv_keyword_meta WHERE mv_id = MMM.mv_id) as findKywrd FROM mt_mv_meta MMM LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }


  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migGroupPhoto"
    , "targetDs": "cjMig"
    , "targetNodeType": "groupPhoto"
    , "query": "SELECT ctID as groupPhotoId , ctTitle as groupPhotoNm , '' as subName , ctID as ctgryId , ctHit as hitNum , '' as groupPhotoDesc , '' as compontSinglePhotoIds , 'Y' as mnetIfTrtYn FROM PHOTO_CATEGORY LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }


  , {
    "typeId": "dbSyncProcess"
    , "executeId": "migSinglePhoto"
    , "targetDs": "cjMig"
    , "targetNodeType": "singlePhoto"
    , "query": "SELECT ptID as singlePhotoId , ptTitle as singlePhotoNm , '' as subName , ptDesc as singlePhotoDesc , ptImage_3 as originImgPath , ptImage_1 as thumbnailImgPath , ptImage_2 as dtlThumbnailImgPath , ctID as ctgryId , 'Y' as mnetIfTrtYn FROM PHOTO_MASTER LIMIT @{BIGINT.start}, @{BIGINT.unit}"
    , "onFail": "stop"
  }
]