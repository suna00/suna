[
  {
    "typeId": "apiCategory",
    "id": "tempOrder",
    "categoryName": "임시 주문서 API"
  },
  {
    "typeId": "apiConfig",
    "category": "tempOrder",
    "apiId": "read",
    "apiName": "임시 주문서 조회",
    "method": "GET",
    "parameters": [
    ],
    "config": {
      "item": {
        "select": {
          "ds": "ytnDevDb",
          "resultType": "read",
          "description": "주문서 전체 계산",
          "sql": "SELECT o.* , (totalProductPrice + totalDeliveryPrice - totalDiscountPrice) as totalOrderPrice from ( select t.tempOrderId, (t.totalBaseOptionPrice + t.totalAddOptionPrice) as totalProductPrice, (SELECT ifnull(sum(deliveryPrice), 0) FROM temporderdeliveryprice WHERE tempOrderId = t.tempOrderId) AS totalDeliveryPrice, 0 AS totalDiscountPrice from ( SELECT cp.tempOrderId, sum((ifnull(pi.addPrice, 0) + ifnull(p.salePrice, 0)) * cp.quantity) AS totalBaseOptionPrice, (SELECT sum(pi.addPrice * ci.quantity) FROM temporderproductitem ci, productoptionitem pi WHERE tempOrderId = cp.tempOrderId AND ci.addOptionItemId = pi.productOptionItemId) AS totalAddOptionPrice FROM temporderproduct cp, productoptionitem pi, product p WHERE tempOrderId = @{tempOrderId} AND cp.baseOptionItemId = pi.productOptionItemId AND p.productId = pi.productId ) t ) o"
        }
      },
      "referencedTempOrderDeliveryPrice": {
        "typeId": "tempOrderDeliveryPrice",
        "query": [
          { "sorting": "created desc" },
          { "field": "tempOrderId", "method": "matching", "value": "{{:tempOrderId}}" }
        ],
        "response": {
          "_all_": "",
          "referencedTempOrderProduct": {
            "typeId": "tempOrderProduct",
            "query": [
              { "sorting": "created desc" },
              {"field" : "productId", "method" : "referenceJoin", "value" : "stockQuantity_notMatching=0" },
              { "includeReferenced": true, "referenceView": "productId" },
              { "field": "tempOrderProductId", "method": "in", "value": "{{:tempOrderProductIds}}" }
            ],
            "response": {
              "_all_": "",
              "referencedTempOrderProductItem": {
                "typeId": "tempOrderProductItem",
                "query": [
                  { "field": "tempOrderProductId", "method": "equals", "value": "{{:tempOrderProductId}}" },
                  { "includeReferenced": true, "referenceView": "addOptionItemId" }
                ]
              },
              "calculateItem": {
                "select": {
                  "ds": "ytnDevDb",
                  "resultType": "read",
                  "description": "주문서상품 레벨 계산",
                  "sql": "SELECT x.*, ((productPrice * quantity) + totalAddOptionPrice) AS orderPrice FROM (SELECT cp.tempOrderProductId, cp.tempOrderId, cp.productId, cp.quantity, cp.baseOptionItemId, pi.name AS baseOptionItemName, ifnull(pi.addPrice, 0) AS baseAddPrice, ifnull(p.salePrice, 0) AS salePrice, (ifnull(pi.addPrice, 0) + ifnull(p.salePrice, 0)) AS productPrice, ifnull((SELECT sum(pi.addPrice * ci.quantity) FROM temporderproductitem ci, productoptionitem pi WHERE tempOrderId = cp.tempOrderId and ci.tempOrderProductId = cp.tempOrderProductId AND ci.addOptionItemId = pi.productOptionItemId), 0) AS totalAddOptionPrice FROM temporderproduct cp, productoptionitem pi, product p WHERE pi.productOptionItemId = cp.baseOptionItemId AND p.productId = pi.productId AND cp.tempOrderProductId = @{tempOrderProductId}) x"
                }
              }
            }
          }
        }
      }
    }
  }
]