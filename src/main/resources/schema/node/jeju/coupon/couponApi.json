[
  {
    "typeId" : "apiCategory",
    "id" : "coupon",
    "categoryName" : "쿠폰 API",
    "fileUrlFormat" : {
       "default": "{{:getEnvValue(cluster.file-prefix, url)}}"
    }
  },
  {
    "typeId" : "apiConfig",
    "category" : "coupon",
    "apiId" : "downloadable",
    "apiName" : "다운로드 가능한 쿠폰 리스트",
    "method" : "GET",
    "parameters" : [
    ],
    "config" : {
      "categoryCoupons": {
        "select" : {
          "ds" : "jejuDevDb",
          "resultType" : "list",
          "sql" : "select a.couponTypeId from ( select couponTypeId from couponTypeToCategoryMap c, producttocategorymap p where productId=@{productId} and p.categoryId = c.categoryId group by couponTypeId ) a, coupontype b where b.couponTypeId = a.couponTypeId and b.couponType = 'category' and b.siteType != IF(IFNULL(@{session.member.siteType},'company') ='university','company', 'university') and createPeriodType != 'stop' and createStartDate <= now() and createEndDate >= now() "
        },
        "response": {
          "_all_": "",
          "couponTypeId": {
            "typeId": "couponType",
            "resultType" : "read",
            "query" : [
              {"field" : "couponTypeId", "method" : "matching", "value" : "{{:couponTypeId}}" }
            ]
          },
          "haveYn": {
            "typeId": "coupon",
            "query" : [
              {"field" : "memberNo", "method" : "matching", "value" : "{{:session.member.memberNo}}" },
              {"field" : "couponTypeId", "method" : "matching", "value" : "{{:couponTypeId}}" }
            ]
          }
        }
      },
      "productCoupons": {
        "typeId": "couponTypeToProductMap",
        "query" : [
          {"field" : "productId", "method" : "matching", "value" : "{{:productId}}" },
          {"field" : "couponTypeId", "method" : "referenceJoin", "value" : "couponType_matching=product&siteType_matching={{:session.member.siteType}}&createPeriodType_notMatching=stop&createStartDate_below={{:now}}&createEndDate_above={{:now}}" },
          {"includeReferenced" : false, "referenceView" : "couponTypeId"}
        ],
        "response": {
          "_all_": "",
          "haveYn": {
            "typeId": "coupon",
            "query" : [
              {"field" : "memberNo", "method" : "matching", "value" : "{{:session.member.memberNo}}" },
              {"field" : "couponTypeId", "method" : "matching", "value" : "{{:couponTypeId}}" }
            ]
          }
        }
      }
    }
  },
  {
    "typeId" : "apiConfig",
    "category" : "coupon",
    "apiId" : "applicable",
    "apiName" : "적용 가능한 쿠폰 리스트",
    "method" : "GET",
    "parameters" : [
    ],
    "config" : {
      "typeId": "tempOrderProduct",
      "query" : [
        {"field" : "tempOrderId", "method" : "matching", "value" : "{{:tempOrderId}}" }
      ],
      "response": {
        "_all_": "",
        "applicableCoupons": {
          "select" : {
            "ds" : "jejuDevDb",
            "resultType" : "list",
            "sql" : "select z.* from ( SELECT x.couponId, y.*, @{orderPrice} as productPrice, IF(y.benefitsType='discountRate', IF((@{orderPrice} / 100 * y.benefitsPrice) > y.maxDiscountPrice, y.maxDiscountPrice,(@{orderPrice} / 100 * y.benefitsPrice)) , IF(y.minPurchasePrice < 1500, y.benefitsPrice, 0)) as discountPrice FROM ( (SELECT a.*, c.productId as useableProductId FROM coupon a, coupontypetoproductmap c WHERE a.memberNo = @{session.member.memberNo} AND c.productId = @{productId} AND a.couponTypeId = c.couponTypeId AND a.siteType in (select code from commoncode where upperCode='siteType' and find_in_set(code,IF(IFNULL(@{siteType}, 'all') != 'all', concat('company',',all'), 'all')) > 0) AND a.channelType in (select code from commoncode where upperCode='channelType' and find_in_set(code,IF(IFNULL(@{channelType}, 'all') != 'all', concat('pc',',all'), 'all')) > 0) AND a.startDate <= now() AND a.endDate >= now() AND a.couponStatus = 'n') UNION ALL (SELECT a.*, c.productId as useableProductId FROM coupon a , ( SELECT couponTypeId,productId FROM couponTypeToCategoryMap c, producttocategorymap p WHERE productId = @{productId} AND p.categoryId = c.categoryId GROUP BY couponTypeId ) c WHERE a.memberNo = @{memberNo} AND a.couponTypeId = c.couponTypeId AND a.siteType in (select code from commoncode where upperCode='siteType' and find_in_set(code,IF(IFNULL(@{siteType}, 'all') != 'all', concat('company',',all'), 'all')) > 0) AND a.channelType in (select code from commoncode where upperCode='channelType' and find_in_set(code,IF(IFNULL(@{channelType}, 'all') != 'all', concat('pc',',all'), 'all')) > 0) AND a.startDate <= now() AND a.endDate >= now() AND a.couponStatus = 'n' )) x, coupontype y where x.couponTypeId = y.couponTypeId ) z where z.discountPrice > 0 order by z.discountPrice desc"
          },
          "response": {
            "_all_": ""
          }
        }
      }
    }
  },
  {
    "typeId": "apiConfig",
    "category": "coupon",
    "apiId": "applicableCoupon",
    "apiName": "적용가능한 쿠폰 조회",
    "method": "POST",
    "parameters": [
      {"paramName" : "id", "required" : true},
      {"paramName" : "typeId", "required" : true}
    ],
    "config": {
      "typeId": "coupon",
      "noneExecute": true,
      "event": "applicableCoupon",
      "data": {
        "typeId": "{{:typeId}}",
        "id": "{{:id}}"
      }
    }
  }
]