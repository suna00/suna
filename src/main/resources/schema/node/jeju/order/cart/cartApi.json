[
  {
    "typeId": "apiCategory",
    "id": "cart",
    "categoryName": "장바구니 API",
    "fileUrlFormat" : {
       "default": "{{:getEnvValue(cluster.file-prefix, url)}}"
    }
  },
  {
    "typeId": "apiConfig",
    "category": "cart",
    "apiId": "read",
    "apiName": "장바구니 조회",
    "method": "GET",
    "parameters": [
    ],
    "config": {
      "item": {
        "select": {
          "ds": "jejuDevDb",
          "resultType": "read",
          "description": "장바구니 전체 계산",
          "sql": "SELECT o.*, (totalProductPrice + totalDeliveryPrice - totalDiscountPrice) AS totalOrderPrice FROM (SELECT t.cartId, (t.totalBaseOptionPrice + t.totalAddOptionPrice) AS totalProductPrice, (SELECT ifnull(sum(deliveryPrice), 0) FROM cartdeliveryprice WHERE cartId = t.cartId) AS totalDeliveryPrice, 0 AS totalDiscountPrice FROM (SELECT cp.cartId, sum((ifnull(pi.addPrice, 0) + ifnull(p.salePrice, 0)) * cp.quantity) AS totalBaseOptionPrice, ifnull((SELECT sum(pi.addPrice * ci.quantity) FROM cartproductitem ci, productoptionitem pi WHERE cartId = cp.cartId AND ci.addOptionItemId = pi.productOptionItemId),0) AS totalAddOptionPrice FROM cartproduct cp, productoptionitem pi, product p WHERE cartId = @{cartId} AND cp.baseOptionItemId = pi.productOptionItemId AND p.productId = pi.productId) t) o "
        }
      },
      "referencedCartDeliveryPrice": {
        "typeId": "cartDeliveryPrice",
        "query": [
          { "sorting": "created desc" },
          { "field": "cartId", "method": "equals", "value": "{{:cartId}}"}
        ],
        "response": {
          "_all_": "",
          "referencedCartProduct": {
            "typeId": "cartProduct",
            "query": [
              { "sorting": "created desc" },
              {"field" : "productId", "method" : "referenceJoin", "value" : "stockQuantity_notMatching=0" },
              { "includeReferenced": true, "referenceView": "productId" },
              { "field": "cartProductId", "method": "in", "value": "{{:cartProductIds}}" }
            ],
            "response": {
              "_all_": "",
              "referencedCartProductItem": {
                "typeId": "cartProductItem",
                "query": [
                  { "field": "cartProductId", "method": "equals", "value": "{{:cartProductId}}" },
                  { "includeReferenced": true, "referenceView": "addOptionItemId" }
                ]
              },
              "calculateItem": {
                "select": {
                  "ds": "jejuDevDb",
                  "resultType": "read",
                  "description": "장바구니상품 레벨 계산",
                  "sql": "SELECT x.*, ((productPrice * quantity) + totalAddOptionPrice) AS orderPrice FROM (SELECT cp.cartProductId, cp.cartId, cp.productId, cp.quantity, cp.baseOptionItemId, pi.name                                                            AS baseOptionItemName, ifnull(pi.addPrice, 0)                                             AS baseAddPrice, ifnull(p.salePrice, 0)                                             AS salePrice, (ifnull(pi.addPrice, 0) + ifnull(p.salePrice, 0))                  AS productPrice, ifnull((SELECT sum(pi.addPrice * ci.quantity) FROM cartproductitem ci, productoptionitem pi WHERE cartId = cp.cartId and ci.cartProductId = cp.cartProductId AND ci.addOptionItemId = pi.productOptionItemId), 0) AS totalAddOptionPrice FROM cartproduct cp, productoptionitem pi, product p WHERE pi.productOptionItemId = cp.baseOptionItemId AND p.productId = pi.productId AND cp.cartProductId = @{cartProductId}) x "
                }
              }
            }
          }
        }
      }
    }
  },
  {
    "typeId": "apiConfig",
    "category": "cart",
    "apiId": "cartRead",
    "apiName": "장바구니 조회",
    "method": "GET",
    "parameters": [
    ],
    "config": {
      "typeId": "cart",
      "noneExecute": true,
      "event" : "cartRead",
      "data": {
        "cartId": "{{:cartId}}"
      }
    }
  },
  {
    "typeId": "apiConfig",
    "category": "cart",
    "apiId": "addInterestProductList",
    "apiName": "장바구니 조회",
    "method": "POST",
    "parameters": [
    ],
    "config": {
      "typeId": "cart",
      "noneExecute": true,
      "event" : "addInterestProductList",
      "data": {
      }
    }
  }
]